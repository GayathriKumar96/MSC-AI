import random


def convert_to_bin(n):
    b = ""
    if n==0:
        return "0"
    while n!=0:
        if n % 2 == 1:
            b+="1"
        else:
            b+="0"
        n//=2
    b = b[-1::-1]
    return b

def exponentiation(m,e):
    result = 1
    x = m
    b =convert_to_bin(e)
    while b:
        if b[-1] == '1':
            result *= x
        x *= x
        b = b[:-1]
    return result

def prime_fermats_test(n):
    if n<2:
        return 0
    for i in range(50):
        a = random.randint(2,n-1)
        if (exponentiation(a,n-1))%n != 1:
            return 0
    return 1

def find_n_bit_primes(n):
    if n<1:
        return -1,-1
    primes = []
    l = exponentiation(2,n-1)
    r = exponentiation(2,n)
    for i in range(l,r):
        if prime_fermats_test(i) == 1:
            primes.append(i)
    if primes == []:
        return -1,-1
    p,q = random.sample(primes,2)
    return p,q

def EEA(a,b):
    r1=a
    r=b
    s1=1
    s=0
    t1=0
    t=1

    while r!=0:
        q= r1//r
        r1,r = r,r1-(q*r)
        s1,s = s,s1-(q*s)
        t1,t = t,t1-(q*t)
    g=r1
    x=s1
    y=t1

    return g,x,y

def rsa_setup(nu):
    p,q = find_n_bit_primes(nu//2)
    N = p*q
    M = (p-1)*(q-1)

    for i in range(2,M):
        g,x,y = EEA(i,M)
        if g==1 and x>=0:
            return N,p,q,i,x

def rsa_encryption(N,Zn):
    print("Encryption: ")
    print("Your message space is the set {Z/"+str(N)+"Z} = {0,1,....."+str(N-1)+"}")
    m = int(input(("Please enter a number from this set:")))
    if m not in Zn:
        print("INVALID")
    else:
        c = exponentiation(m,e) % N
        print("The ciphertext for your message {0} is {1}".format(m,c))
    print("-------------------------------------------------")

def rsa_decryption(N,Zn):
    print("Decryption: ")
    print("Your ciphertext space is the set {Z/"+str(N)+"Z} = {0,1,....."+str(N-1)+"}")
    c = int(input(("Please enter a number from this set:")))
    if c not in Zn:
        print("INVALID")
    else:
        m = exponentiation(c,d) % N
        print("The plaintext for your ciphertext {0} is {1}".format(c,m))
    print("-------------------------------------------------")

nu = int(input("Please enter the security parameter 'nu': "))
if nu<2:
    print("INVALID")
else:
    N,p,q,e,d = rsa_setup(nu)
    print("-------------------------------------------------")
    print("Setup:")
    print("The first prime generated by the Setup algorithm is p = ",p)
    print("The second prime generated by the Setup algorithm is q = ",q)
    print("The integer N = pq = ",N)
    print("The encryption exponent is e = ",e)
    print("The decryption exponent is d = ",d)
    print("-------------------------------------------------")
    option = '1'
    Zn = set(range(N))
    while option in ['1','2']:
        print("-------------------------------------------------")
        print("Please enter an option: ")
        print("1 to Encrypt")
        print("2 to Decrypt")
        print("Any other number to quit")
        option = input("Your option: ")
        print("-------------------------------------------------")
        if option == '1':
            rsa_encryption(N,Zn)
        elif option == '2':
            rsa_decryption(N,Zn)


